{"ast":null,"code":"import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\n// üëáÔ∏è IMPORTANT: use correct ID of your root element\n// this is the ID of the div in your index.html file\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\n// üëáÔ∏è if you use TypeScript, add non-null (!) assertion operator\n// const root = createRoot(rootElement!);\n\n/*root.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);*/\n\nimport express from \"express\";\n// const express = require(\"express\");\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded());\napp.use(cors());\nmongoose.connect(\"mongodb://localhost:27017/auth\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n() => {\n  console.log(\"connected to DB\");\n};\n\n//user schema \nconst userSchema = new mongoose.Schema({\n  name: String,\n  email: String,\n  password: String\n});\nconst User = new mongoose.model(\"User\", userSchema);\n\n//routes routes\napp.post(\"/Login\", (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  User.findone({\n    email: email\n  }, (err, user) => {\n    if (user) {\n      if (password === user.password) {\n        res.send({\n          message: \"login sucess\",\n          user: user\n        });\n      } else {\n        res.send({\n          message: \"wrong credentials\"\n        });\n      }\n    } else {\n      res.send(\"not register\");\n    }\n  });\n});\napp.post(\"/Register\", (req, res) => {\n  console.log(req.body);\n  const {\n    fname,\n    lname,\n    email,\n    password\n  } = req.body;\n  User.findOne({\n    email: email\n  }, (err, user) => {\n    if (user) {\n      res.send({\n        message: \"user already exist\"\n      });\n    } else {\n      const user = new User({\n        fname,\n        lname,\n        email,\n        password\n      });\n      user.save(err => {\n        if (err) {\n          res.send(err);\n        } else {\n          res.send({\n            message: \"sucessfull\"\n          });\n        }\n      });\n    }\n  });\n});\napp.listen(6969, () => {\n  console.log(\"started\");\n});","map":{"version":3,"names":["StrictMode","createRoot","App","rootElement","document","getElementById","root","express","cors","mongoose","app","use","json","urlencoded","connect","useNewUrlParser","useUnifiedTopology","console","log","userSchema","Schema","name","String","email","password","User","model","post","req","res","body","findone","err","user","send","message","fname","lname","findOne","save","listen"],"sources":["D:/hello/src/index.js"],"sourcesContent":["import {StrictMode} from 'react';\nimport {createRoot} from 'react-dom/client';\n\nimport App from './App';\n\n// üëáÔ∏è IMPORTANT: use correct ID of your root element\n// this is the ID of the div in your index.html file\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\n// üëáÔ∏è if you use TypeScript, add non-null (!) assertion operator\n// const root = createRoot(rootElement!);\n\n/*root.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);*/\n\nimport express from \"express\";\n// const express = require(\"express\");\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded());\napp.use(cors());\n\n\nmongoose.connect(\"mongodb://localhost:27017/auth\",{\n    useNewUrlParser:true,\n    useUnifiedTopology:true\n});()=>{\n    console.log(\"connected to DB\");\n}\n\n\n//user schema \nconst userSchema = new mongoose.Schema({\n    name: String,\n    email: String,\n    password: String\n});\n\nconst User = new mongoose.model(\"User\", userSchema);\n\n//routes routes\napp.post(\"/Login\",(req,res)=>{\n    const {email,password} =req.body;\n    User.findone({email:email},(err,user)=>{\n        if(user){\n           if(password === user.password){\n               res.send({message:\"login sucess\",user:user});\n           }else{\n               res.send({message:\"wrong credentials\"});\n           }\n        }else{\n            res.send(\"not register\");\n        }\n    })\n});\napp.post(\"/Register\",(req,res)=>{\n    console.log(req.body);\n    const {fname,lname,email,password} =req.body;\n    User.findOne({email:email},(err,user)=>{\n        if(user){\n            res.send({message:\"user already exist\"});\n        }else {\n            const user = new User({fname,lname,email,password})\n            user.save(err=>{\n                if(err){\n                    res.send(err);\n                }else{\n                    res.send({message:\"sucessfull\"});\n                }\n            })\n        }\n    })\n\n\n}); \n\napp.listen(6969,()=>{\n    console.log(\"started\");\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}